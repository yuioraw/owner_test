plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"
}

repositories {
    mavenCentral()
}

def allureVersion = "2.17.2",
    junitVersion = "5.8.2"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        autoconfigure.set(true)
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:6.3.2",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            'org.aeonbits.owner:owner:1.0.12',
            "com.github.javafaker:javafaker:1.0.2"
    )
    testRuntimeOnly(
            'org.slf4j:slf4j-simple:1.7.36',
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties()) // основная команда для работы со значениями задаваемыми через терминал

//    systemProperty("browser", "safari") // жестко задаем переменной browser значение safari // нельза поменять даже из терминала
//    systemProperty("enviroment", System.getProperty("enviroment", "stage")) // строка для разделения запуска на разных окружениях

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task main_tests(type: Test) {
    useJUnitPlatform{
        includeTags "main"
    }
}

task owner_tests(type: Test) {
    useJUnitPlatform{
        includeTags "owner"
    }
}